@page "/pokemon/{PokemonId}"
@using Models
@using Util
@inject PokeClient client

<div class="container">
	<div class="card">
		@if (@pokemon.types.Count > 0)
		{
			<div class="card-top" style="background-color: @PokeColor.GetTypeColor(@pokemon.types[0].type.name)">
				<img src="@pokemon.sprites.front_default" alt="Pokemon Sprite" class="card-img-top" />
			</div>
		}
		<div class="inner-container">
			<div class="stats-head">
				<div class="icon-container">
					<img src="/img/@PokeUtil.GetRandomBall()" alt="" class="poke-icon" />
					<h1 class="pokemon-name title">@pokemon.name</h1>
				</div>
				<div class="pokemon-info">
					<h5>Heigh: @PokeUtil.GetPokemonHeightInMeters(@pokemon.height) m</h5>
					<div>
						@foreach (var type in pokemon.types)
						{
							<span class="type-badge" 
							style="background-color: @PokeColor.GetTypeColor(@type.type.name)">@type.type.name</span>
						}
					</div>
					<h5>Weight: @PokeUtil.GetPokemonWeightInKilograms(@pokemon.weight) kg</h5>
				</div>
			</div>
			<div class="stats-head">
				<div class="icon-container">
					<img src="/img/insignia.png" alt="Insignia" class="poke-icon"/>
					<h2>Estadisticas</h2>
				</div>
				@foreach (var stat in pokemon.stats)
				{
					<div class="stat-bar">
						<h5 class="stat">@stat.stat.name: @stat.base_stat</h5>
						<div class="progress">
							<div class="progress-bar progress-bar-striped" role="progressbar" style="width: @stat.base_stat%; 
							background-color: @PokeColor.GetStatColor(@stat.stat.name)" aria-valuenow="100" aria-valuemin="0" 
							aria-valuemax="200">
							</div>
						</div>
					</div>
				}
			</div>

			<NavLink class="btn btn-primary mt-3" href="/">Ir al Inicio</NavLink>

		</div>
	</div>
</div>

@code {
	[Parameter]

	public string PokemonId { get; set; }

	Pokemon pokemon = new Pokemon();

	protected async override Task OnInitializedAsync()
	{
		pokemon = await client.GetPokemon(PokemonId);
	}
}